% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pmclapply.R
\name{pmclapply}
\alias{pmclapply}
\title{mclapply with progress bar}
\usage{
pmclapply(
  X,
  FUN,
  ...,
  progress = TRUE,
  spinner = TRUE,
  title = "",
  mc.preschedule = TRUE,
  mc.set.seed = TRUE,
  mc.silent = FALSE,
  mc.cores = getOption("mc.cores", 2L),
  mc.cleanup = TRUE,
  mc.allow.recursive = TRUE,
  affinity.list = NULL
)
}
\arguments{
\item{X}{a vector (atomic or list) or an expressions vector. Other objects
(including classed objects) will be coerced by \code{as.list}.}

\item{FUN}{the function to be applied via \code{\link[=mclapply]{mclapply()}} to each element of \code{X}
in parallel.}

\item{...}{Optional arguments passed to \code{FUN}.}

\item{progress}{Logical whether to show the progress bar.}

\item{spinner}{Logical whether to show a spinner which moves each time a
parallel process is completed.}

\item{title}{Title for the progress bar.}

\item{mc.preschedule, mc.set.seed, mc.silent, mc.cleanup, mc.allow.recursive, affinity.list}{See \code{\link[=mclapply]{mclapply()}}.}

\item{mc.cores}{The number of cores to use, i.e. at most how many child
processes will be run simultaneously. The option is initialized from
environment variable \code{MC_CORES} if set. Must be at least one, and
parallelization requires at least two cores.}
}
\value{
A list of the same length as \code{X} and named by \code{X}.
}
\description{
\code{pmclapply} adds a progress bar to \code{\link[=mclapply]{mclapply()}} in Rstudio environment using
output to the console. It is designed to add very little overhead.
}
\seealso{
\code{\link[=mclapply]{mclapply()}}
}
